{#
    {{ jfields.ffImage(
        {
            pathSet: form.pathSet,
            modificationDate: form.modificationDate,
            imageTemp: form.imageTemp,
            imageAlt: form.imageAlt
        }, creating_entity
    ) }}
#}
{% macro ffImage(fields, creating) %}
    <div class="flex file-container">
        <div class="basis33 file-preview-container">
            {{ form_row(fields.pathSet) }}

            {% if fields.pathSet.vars.value is empty %}
                <img src="{{asset('images/image-missing.svg')}}" width="50">
            {% else %}
                <img src="{{asset(fields.pathSet.vars.value)}}" width="50" class="thumbnail">
            {% endif %}

            <div class="modification-date-box">
                {{ form_errors(fields.modificationDate) }}
                {{ form_widget(fields.modificationDate, {'attr': {'class': 'modification-date'}}) }}
            </div>
        </div>
        <div class="basis66">
            <div class="error-container">
                <div class="field-error-container">{{ form_errors(fields.imageTemp) }}</div>
                <div class="field-error-container">{{ form_errors(fields.imageAlt) }}</div>
            </div>
            
            <div class="alt-container">
                {{ form_label(fields.imageAlt, 'Alt Description') }}
                {{ form_widget(fields.imageAlt, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="control-container no-delete">
                <label class="file-label">
                    {{ form_widget(fields.imageTemp) }}
                    {% if creating %}
                        <span>upload</span>
                    {% else %}
                        <span>update</span>
                    {% endif %}
                </label>
            </div>
        </div>
    </div>
{% endmacro %}

{#
    {{ jfields.ffImageResponsive(form.collection_field, creating_entity) }}
#}
{% macro ffImageResponsive(collection_field, creating_entity) %}
    {% import _self as jfields %}
    {% for item in collection_field %}
        {% if item.isMobile.vars.value == 1 %}
            <fieldset>
                <legend>Mobile</legend>
                {{ jfields.ffImage(
                    {
                        pathSet: item.pathSet,
                        modificationDate: item.modificationDate,
                        imageTemp: item.imageTemp,
                        imageAlt: item.imageAlt
                    }, creating_entity
                ) }}
            </fieldset>
        {% else %}
            <fieldset>
                <legend>Desktop</legend>
                {{ jfields.ffImage(
                    {
                        pathSet: item.pathSet,
                        modificationDate: item.modificationDate,
                        imageTemp: item.imageTemp,
                        imageAlt: item.imageAlt
                    }, creating_entity
                ) }}
            </fieldset>
        {% endif %}
    {% endfor %}
{% endmacro %}

{#
    {{ jfields.ffImageResponsiveWithPreview(form.collection_field, creating_entity) }}
#}
{% macro ffImageResponsiveWithPreview(collection_field, creating_entity) %}
    {% import _self as jfields %}
    {% for item in collection_field %}
        {% if item.isMobile.vars.value == 1 %}
            <fieldset>
                <legend>Mobile</legend>
                {{ jfields.ffImage(
                    {
                        pathSet: item.pathSet,
                        modificationDate: item.modificationDate,
                        imageTemp: item.imageTemp,
                        imageAlt: item.imageAlt
                    }, creating_entity
                ) }}
            </fieldset>
        {% else %}
            {# if isMobile is false, it can only be either desktop or preview #}
            {% if item.isPreview.vars.value == 0 %}
                <fieldset>
                    <legend>Desktop</legend>
                    {{ jfields.ffImage(
                        {
                            pathSet: item.pathSet,
                            modificationDate: item.modificationDate,
                            imageTemp: item.imageTemp,
                            imageAlt: item.imageAlt
                        }, creating_entity
                    ) }}
                </fieldset>
            {% else %}
                {# if isPreview is true, it can only be preview #}
                <fieldset>
                    <legend>Preview</legend>
                    {{ jfields.ffImage(
                        {
                            pathSet: item.pathSet,
                            modificationDate: item.modificationDate,
                            imageTemp: item.imageTemp,
                            imageAlt: item.imageAlt
                        }, creating_entity
                    ) }}
                </fieldset>
            {% endif %}
        {% endif %}
    {% endfor %}
{% endmacro %}

{#
    {{ jfields.ffBackgroundImage(
        {
            pathSet: form.**prop**.pathSet,
            modificationDate: form.**prop**.modificationDate,
            imageTemp: form.**prop**.imageTemp,
            imageAlt: form.**prop**.imageAlt,
            bgPosition: form.**prop**.backgroundPosition,
            labelBgPosition: 'Background Position',
        }, creating_entity
    ) }}
#}
{% macro ffBackgroundImage(fields, creating) %}
    <div class="flex file-container ff-background-image">
        <div class="basis33 file-preview-container">
            {{ form_row(fields.pathSet) }}

            {% if fields.pathSet.vars.value is empty %}
                <img src="{{asset('images/image-missing.svg')}}" width="50">
            {% else %}
                <img src="{{asset(fields.pathSet.vars.value)}}" width="50" class="thumbnail">
            {% endif %}

            <div class="modification-date-box">
                {{ form_errors(fields.modificationDate) }}
                {{ form_widget(fields.modificationDate, {'attr': {'class': 'modification-date'}}) }}
            </div>
        </div>
        <div class="basis66">
            <div class="error-container">
                <div class="field-error-container">{{ form_errors(fields.imageTemp) }}</div>
                <div class="field-error-container">{{ form_errors(fields.imageAlt) }}</div>
            </div>
            
            <div class="alt-container">
                {{ form_label(fields.imageAlt, 'Alt Description') }}
                {{ form_widget(fields.imageAlt, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="form-row fr-background-position">
                {#------------ Label ------------#}
                {{ form_label(fields.bgPosition, fields.labelBgPosition ?? null) }}
                
                {#------------ Errors ------------#}
                <div class="field-error-container">{{ form_errors(fields.bgPosition) }}</div>
                
                {#------------ Form Control ------------#}
                {{ form_widget(fields.bgPosition, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="control-container no-delete">
                <label class="file-label">
                    {{ form_widget(fields.imageTemp) }}
                    {% if creating %}
                        <span>upload</span>
                    {% else %}
                        <span>update</span>
                    {% endif %}
                </label>
            </div>
        </div>
    </div>
{% endmacro %}

{#
    {{ jfields.ffGeneral(
        {
            field: form.###,
            label: '###'
        }
    ) }}
#}
{% macro ffGeneral(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row ' ~ params.row_class : 'form-row' %}

    <div class="{{ container_class }}">
        {#------------ Label ------------#}
        {{ form_label(params.field, params.label ?? null) }}
        
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
        
        {#------------ Form Control ------------#}
        {{ form_widget(params.field, {'attr': {'class': 'form-control'}}) }}
    </div>
{% endmacro %}

{#
    {{ jfields.ffDateTime(
        {
            field: form.###,
            label: '###'
        }
    ) }}
#}
{% macro ffDateTime(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row date-picker ' ~ params.row_class : 'form-row date-picker' %}

    <div class="{{ container_class }}">
        <div class="basis100">
            {#------------ Label ------------#}
            {{ form_label(params.field, params.label ?? null) }}
            
            {#------------ Errors ------------#}
            <div class="field-error-container">{{ form_errors(params.field) }}</div>
        </div>
        
        {#------------ Form Control ------------#}
        {% for item in params.field %}
           <div class="pod basis33">
               {{ form_errors(item) }}
               {{ form_widget(item) }}
           </div>
        {% endfor %}
    </div>
{% endmacro %}

{#
    {{ jfields.ffRadio({
        field: ###,
        label: '###',
        pod_class: '###'
    }) }}
#}
{% macro ffRadio(params) %}
    <div class="form-row radio-linear">
        <div class="basis100">
            {#------------ Errors ------------#}
            <div class="field-error-container">{{ form_errors(params.field) }}</div>
            
            {#------------ Label ------------#}
            {{ form_label(params.field, params.label ?? null) }}
        </div>
        
        {#------------ Form Control ------------#}
        {% for item in params.field %}
           <div class="pod {{params.pod_class}}">
               {{ form_errors(item) }}
               {{ form_widget(item) }}
               <span class="j-label">{{ item.vars.label }}</span>
           </div>
        {% endfor %}
    </div>
{% endmacro %}

{#
    {{ jfields.ffCheckboxSingle(
        {
            field: form.###,
            label: '###'
        }
    ) }}
#}
{% macro ffCheckboxSingle(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row ' ~ params.row_class : 'form-row' %}

    <div class="{{ container_class }}">
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
        
        {#------------ Label ------------#}
        {{ form_label(params.field, params.label ?? null, {'label_attr' : {'class' : 'inline'}}) }}
        
        {#------------ Form Control ------------#}
        {{ form_widget(params.field, {'attr' : {'class' : 'inline'}}) }}
    </div>
{% endmacro %}

{#
    {{ jfields.ffCheckboxSingleFloating(
        {
            field: form.###,
            label: '###'
        }
    ) }}
#}
{% macro ffCheckboxSingleFloating(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row floating-checkbox ' ~ params.row_class : 'form-row floating-checkbox' %}

    <div class="{{ container_class }}">
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
        
        {#------------ Label ------------#}
        {{ form_label(params.field, params.label ?? null, {'label_attr' : {'class' : 'inline'}}) }}
        
        {#------------ Form Control ------------#}
        {{ form_widget(params.field, {'attr' : {'class' : 'inline'}}) }}
    </div>
{% endmacro %}


{#
    {{ jfields.ffMarkdown(
        {
            field: form.contentRaw,
            label: '###'
        }
    ) }}
#}
{% macro ffMarkdown(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row ' ~ params.row_class : 'form-row' %}
    {% set row_height = (params.row_height ?? false) ? params.row_height : '8' %}

    <div class="js-wrapper-show-hide">
        <a href="#" class="js-trigger-show-hide"><span>+</span></a>
        <div class="js-toggle-show-hide">
            <div class="sublabel">
                <p>This field will only accept markdown. Mardown is simply a way of writing plain text that will be turned into HTML markup. It allows the user to "create" HTML without having to know HTML. Click the options below to see examples of each.</p>
                <section id="js-md-help-popovers"></section>
            </div>
        </div>
    </div>

    <div class="{{ container_class }}">
        {#------------ Label ------------#}
        {{ form_label(params.field, params.label ?? null) }}
        
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
        
        {#------------ Form Control ------------#}
        {{ form_widget(params.field, {'attr': {'class': 'form-control', 'rows': row_height}}) }}
    </div>
{% endmacro %}


{#
    <fieldset>
        <legend>Publish</legend>
        {{ jfields.ffPublished(
            {
                field: form.published,
                label: 'Publish this item?'
            }
        ) }}
    </fieldset>
#}
{% macro ffPublished(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row ' ~ params.row_class : 'form-row' %}

    <div class="{{ container_class }}">
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
        
        {#------------ Label ------------#}
        {{ form_label(params.field, params.label ?? null, {'label_attr' : {'class' : 'inline'}}) }}
        
        {#------------ Form Control ------------#}
        {{ form_widget(params.field, {'attr' : {'class' : 'inline'}}) }}
    </div>
{% endmacro %}

{#
    {{ jfields.ffCollection_text(
        {
            field: form.###,
            label: '###',
            id_add: '###-item-add',
            id_list: '###-collection'
        }
    ) }}
#}
{% macro ffCollection_text(params) %}
    {% import 'JLibrary:macros:collection-prototypes.html.twig' as jprotos %}
    {% set container_class = (params.row_class ?? false) ? 'form-row collection-add-delete' ~ params.row_class : 'form-row collection-add-delete' %}

    <div class="{{ container_class }}">
        {#------------ Label ------------#}
        {{ form_label(params.field, params.label ?? null) }}
        
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>

        <div class="add-container">
            <a href="#" id="{{ params.id_add }}" class="add-trigger">add</a>
        </div>

        <ul id="{{ params.id_list }}" data-prototype="{{ jprotos.cpText(params.field.vars.prototype)|e('html_attr') }}">
            {% for item in params.field %}
                {{ jprotos.cpText(item) }}
            {% else %}
                {% do params.field.setRendered %} 
            {% endfor %}
        </ul>
    </div>

    <script type="text/javascript">
        var j29_add_delete_fields_specs = {
                run: true,
                form_control_type: 'input',
                items : [
                    {
                        add_trigger_id: '{{ params.id_add }}', 
                        fields_list_id: '{{ params.id_list }}'
                    }
                ]
        }
    </script>    
{% endmacro %}


{% macro ffCollectionDefined_text(params) %}
    <div class="form-row">
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
    </div>
    <ul>
        {% for item in params.field %}
            <li class="dynamic-insert">
                <div class="form-controls-box">
                    <div class="form-row">
                        <div class="field-error-container">{{ form_errors(item) }}</div>
                        {{ form_label(item) }}
                        {{ form_widget(item) }}
                    </div>
                </div>
            </li>
        {% endfor %}
    </ul>
{% endmacro %}

{% macro DEVELOPING___ffGeneralSublabel(params) %}
    {% set container_class = (params.row_class ?? false) ? 'form-row ' ~ params.row_class : 'form-row' %}

    <div class="{{ container_class }}">
        {#------------ Label ------------#}
        {% if (params.custom_sublabel ?? false) %}
            <div class="js-wrapper-show-hide version-2">
                <div class="trigger-with-label">
                    <a href="#" class="js-trigger-show-hide">
                        <i class="fa fa-plus-circle" aria-hidden="true"></i>
                    </a>
                    {{ form_label(params.field, params.label ?? null, {'label_attr': {'class': 'js-trigger-label'}}) }}
                </div>
                <div class="js-toggle-show-hide">
                    <p class="sublabel">{{ params.custom_sublabel }}</p>
                </div>
            </div>
        {% else %}
            {{ form_label(params.field, params.label ?? null) }}
        {% endif %}
        
        {#------------ Errors ------------#}
        <div class="field-error-container">{{ form_errors(params.field) }}</div>
        
        {#------------ Form Control ------------#}
        {{ form_widget(params.field, {'attr': {'class': 'form-control'}}) }}
    </div>
{% endmacro %}